drop table if exists films cascade ;
drop table if exists likes cascade ;
drop table if exists MPA cascade ;
drop table if exists genre_to_films cascade ;
drop table if exists genre cascade ;
drop table if exists users cascade ;
drop table if exists friends cascade ;
drop table if exists unconfirmed_requests cascade ;
drop table if exists directors cascade ;
drop table if exists director_to_films cascade ;
drop table if exists reviews cascade ;
drop table if exists likes_reviews cascade ;
drop table if exists dislikes_reviews cascade ;
drop table if exists GUIDE cascade ;
drop table if exists FEED cascade ;

CREATE TABLE IF NOT EXISTS films (
    film_id int PRIMARY KEY AUTO_INCREMENT,
    name varchar NOT NULL,
    description varchar,
    release_date date,
    duration int,
    rate int DEFAULT 0,
    rating_id int
);

CREATE TABLE IF NOT EXISTS likes (
    film_id int,
    user_id int
);

CREATE TABLE IF NOT EXISTS MPA (
    rating_id int PRIMARY KEY AUTO_INCREMENT,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS genre_to_films (
    film_id int NOT NULL,
    genre_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id int PRIMARY KEY AUTO_INCREMENT,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    user_id int PRIMARY KEY AUTO_INCREMENT,
    email varchar NOT NULL,
    login varchar NOT NULL,
    name varchar NOT NULL,
    birthday date
);

CREATE TABLE IF NOT EXISTS friends (
    user_id int NOT NULL,
    friend_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS unconfirmed_requests (
    user_id int NOT NULL,
    friend_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS directors (
    director_id int PRIMARY KEY AUTO_INCREMENT,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS director_to_films (
    director_id int NOT NULL,
    film_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id int PRIMARY KEY AUTO_INCREMENT,
    content varchar NOT NULL,
    isPositive boolean,
    user_id int NOT NULL,
    film_id int NOT NULL,
    useful int DEFAULT 0
);

CREATE TABLE IF NOT EXISTS likes_reviews (
    review_id int NOT NULL,
    user_id int NOT NULL
);

CREATE TABLE IF NOT EXISTS dislikes_reviews (
    review_id int NOT NULL,
    user_id int NOT NULL
);
create table IF NOT EXISTS GUIDE
(
    GUIDE_KEY bigint not null,
    GUIDE_DICT_KEY bigint generated by default as identity not null,
    GUIDE_NAME varchar not null,
    constraint GUIDE_DICT_KEY_GUIDE_PK primary key (GUIDE_DICT_KEY)
    );
create table IF NOT EXISTS FEED
(
    FEED_EVENT_ID bigint generated by default as identity not null,
    FEED_TIMESTAMP long not null,
    FEED_USER_ID bigint not null,
    FEED_EVENT_TYPE_ID int not null,
    FEED_OPERATION_ID int not null,
    FEED_ENTITY_ID bigint not null,
    constraint FEED_ID_FEED_PK primary key (FEED_EVENT_ID),
    constraint FEED_EVENT_TYPE_ID_FK foreign key (FEED_EVENT_TYPE_ID) references GUIDE,
    constraint FEED_OPERATION_ID_FK foreign key (FEED_OPERATION_ID) references GUIDE
    );